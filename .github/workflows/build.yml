---
name: build

on:
  pull_request:
    types:
      - synchronize
      - reopened
      - opened
    branches:
      - master
    paths-ignore:
      - '**.md'
      - '.mailmap'
      - 'ChangeLog*'
      - 'whatsnew*'
      - 'LICENSE'
  push:
    paths-ignore:
      - '**.md'
      - '.mailmap'
      - 'ChangeLog*'
      - 'whatsnew*'
      - 'LICENSE'

permissions: read-all

jobs:
  freebsd-cmake-job:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci/freebsd skip') && !contains(github.event.head_commit.message, 'ci/freebsd/cmake skip')"
    strategy:
      fail-fast: false
      matrix:
        release: ["13.4", "14.1"]
        EVENT_MATRIX:
          - NONE
          - NO_SSL
          - DISABLE_OPENSSL
          - DISABLE_THREAD_SUPPORT
          - DISABLE_DEBUG_MODE
          - DISABLE_MM_REPLACEMENT
          - TEST_EXPORT_STATIC
          - TEST_EXPORT_SHARED

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Cache Build
        uses: actions/cache@v4
        with:
          path: build
          key: freebsd-${{ matrix.release }}-cmake-${{ matrix.EVENT_MATRIX }}-${{ hashFiles('CMakeLists.txt', 'cmake/**', '.github/**') }}-v4

      - name: Build
        uses: vmactions/freebsd-vm@v1
        with:
          release: ${{ matrix.release }}
          prepare: |
            pkg install -y  mbedtls cmake python3
          usesh: true
          run: |
            if [ "${{ matrix.EVENT_MATRIX }}" == "DISABLE_OPENSSL" ]; then
              EVENT_CMAKE_OPTIONS="-DEVENT__DISABLE_OPENSSL=ON"

            elif [ "${{ matrix.EVENT_MATRIX }}" == "NO_SSL" ]; then
              EVENT_CMAKE_OPTIONS="-DEVENT__DISABLE_OPENSSL=ON -DEVENT__DISABLE_MBEDTLS=ON"

            elif [ "${{ matrix.EVENT_MATRIX }}" == "DISABLE_THREAD_SUPPORT" ]; then
              EVENT_CMAKE_OPTIONS="-DEVENT__DISABLE_THREAD_SUPPORT=ON"

            elif [ "${{ matrix.EVENT_MATRIX }}" == "DISABLE_DEBUG_MODE" ]; then
              EVENT_CMAKE_OPTIONS="-DEVENT__DISABLE_DEBUG_MODE=ON"

            elif [ "${{ matrix.EVENT_MATRIX }}" == "DISABLE_MM_REPLACEMENT" ]; then
              EVENT_CMAKE_OPTIONS="-DEVENT__DISABLE_MM_REPLACEMENT=ON"

            elif [ "${{ matrix.EVENT_MATRIX }}" == "TEST_EXPORT_STATIC" ]; then
              EVENT_CMAKE_OPTIONS="-DEVENT__LIBRARY_TYPE=STATIC -DEVENT__DISABLE_TESTS=ON -DEVENT__DISABLE_SAMPLES=ON"

            elif [ "${{ matrix.EVENT_MATRIX }}" == "TEST_EXPORT_SHARED" ]; then
              EVENT_CMAKE_OPTIONS="-DEVENT__LIBRARY_TYPE=SHARED -DEVENT__DISABLE_TESTS=ON -DEVENT__DISABLE_SAMPLES=ON"

            else
              EVENT_CMAKE_OPTIONS=""
            fi

            mkdir -p build
            cd build
            echo [cmake]: cmake .. $EVENT_CMAKE_OPTIONS
            cmake .. $EVENT_CMAKE_OPTIONS || (rm -rf * && cmake .. $EVENT_CMAKE_OPTIONS)
            cmake --build .

      - name: Test
        uses: nick-fields/retry@v3
        with:
          max_attempts: 5
          timeout_minutes: 60
          shell: bash
          command: |
            ssh freebsd sh <<EOF
            cd $GITHUB_WORKSPACE
            JOBS=1
            export CTEST_PARALLEL_LEVEL=$JOBS
            export CTEST_OUTPUT_ON_FAILURE=1
            cd build
            if [ "${{ matrix.EVENT_MATRIX }}" == "TEST_EXPORT_STATIC" ]; then
              python3 ../test-export/test-export.py static
            elif [ "${{ matrix.EVENT_MATRIX }}" == "TEST_EXPORT_SHARED" ]; then
              python3 ../test-export/test-export.py shared
            else
              cmake --build . --target verify
            fi
            EOF

      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: freebsd-${{ matrix.release }}-cmake-${{ matrix.EVENT_MATRIX }}-build
          path: build
